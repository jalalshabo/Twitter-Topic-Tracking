{"version":3,"sources":["context/globalContext.js","context/messageContext.js","context/transitionContext.js","components/MainMessage.js","components/Background.js","context/inputContext.js","components/DropdownSection.js","components/InputSection.js","components/ResultPage.js","App.js","index.js"],"names":["globalContext","createContext","messageContext","transitionContext","MainMessage","globalState","useContext","fade","TitleMessage","SubMessage","translate","useSpring","to","opacity","marginTop","from","config","mass","frequency","damping","translate2","translateY","delay","h1","style","p","className","Background","transcorner","marginBottom","marginRight","borderRight","datetransition","width","rotation","rotateZ","loop","duration","fadehalf","hr","div","inputContext","DropdownSection","props","chosenOption","setChosenOption","setInputFieldValue","inputFieldValue","dropdowntransition","backgroundColor","useState","open","setOpen","InputField","setInputField","Dropdown","DropdownItem","onClick","option","children","useEffect","class","onChange","event","target","value","InputSection","Result","setResult","secondPage","buttonMessage1","setButtonMessage1","setMainMessage","setSubMessage","setglobalState","SelectDate1","setSelectDate1","SelectDate2","setSelectDate2","Submit","setSubmit","InputFieldValue","today","Date","Date1Selected","setDate1Selected","Date2Selected","setDate2Selected","buttonMessage2","setButtonMessage2","date","date1","setDate1","date2","setDate2","isInitialMount","useRef","fadebutton","secondbutton","marginLeft","styles","current","fetch","then","response","json","data","console","log","catch","error","alert","window","location","reload","setHours","toISOString","substring","document","getElementById","display","button","id","Provider","height","borderRadius","margin","color","a","inputdata","method","headers","body","JSON","stringify","ok","ResultPage","GraphNumber","setGraphNumber","labels","Object","keys","datasets","label","values","borderColor","borderWidth","options","indexAxis","elements","bar","responsive","plugins","legend","position","title","text","changeGraph","num","App","bgColor","setbgColor","Color","setColor","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc8b6039.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\n\r\n\r\nexport const globalContext = createContext({});","import { createContext } from 'react';\r\n\r\n\r\n\r\nexport const messageContext = createContext({});","import { createContext } from 'react';\r\n\r\n\r\n\r\nexport const transitionContext = createContext({});","import React, { useContext } from 'react';\r\nimport { globalContext } from '../context/globalContext';\r\nimport { messageContext } from '../context/messageContext';\r\nimport { transitionContext } from '../context/transitionContext';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nimport './MainMessage.css';\r\n\r\nfunction MainMessage() {\r\n \r\n    \r\n    const {globalState} = useContext(globalContext);\r\n    const {fade} = useContext(transitionContext);  \r\n\r\n    const {TitleMessage} = useContext(messageContext);\r\n    const {SubMessage} = useContext(messageContext);\r\n\r\n\r\n    const translate = useSpring({ \r\n        to: {opacity: 1 ,marginTop:(globalState === 1)?-100:-200}, \r\n        from: {opacity: 0, marginTop: -500},\r\n        \r\n        \r\n        config: {mass: 1, frequency: 1, damping: 1},\r\n    });\r\n   \r\n    const translate2 = useSpring({ \r\n        to: {opacity: 1 ,translateY:190}, \r\n        from: {opacity: 0, translateY:0 },\r\n        delay: 500,\r\n        \r\n        config: {mass: 1, frequency: 1, damping: 1},\r\n    });\r\n    return (\r\n        <>\r\n          <animated.h1 style = {translate}> {TitleMessage} </animated.h1>\r\n          <animated.p style = {(globalState === 1)? translate2 :fade} className=\"typewriter\"> {SubMessage}</animated.p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainMessage\r\n","import React, { useContext } from 'react';\r\nimport { globalContext } from '../context/globalContext';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport './Background.css';\r\n\r\nfunction Background() {\r\n\r\n    const {globalState} = useContext(globalContext);\r\n    \r\n    const transcorner = useSpring({ \r\n        to: {opacity: 0.3 ,marginBottom:(globalState === 1)? 1000:0, marginRight:0, borderRight:(globalState === 1)? \"1px solid #fff\" :\"1px solid #000\"}, \r\n        from: {opacity: 0, marginBottom:-400, marginRight:-400},\r\n        delay:(globalState === 1)?0:500,\r\n        \r\n        \r\n        config: {mass: 1, frequency: 1, damping: 1},\r\n      });\r\n    \r\n\r\n    const datetransition = useSpring({\r\n        to: {opacity:(globalState === 1)? 1: 0, width:(globalState === 1)?\"10%\": \"0%\"},\r\n        delay: (globalState === 1)?700: 0,\r\n\r\n        config: {mass: 1, frequency: 1, damping: 2},\r\n    });\r\n\r\n    const rotation = useSpring({\r\n        to:{rotateZ:0}, \r\n        from:{rotateZ:360},\r\n        loop: true,\r\n    \r\n        config: {duration:10000},\r\n      });\r\n      \r\n    const fadehalf = useSpring({ \r\n        to: {opacity: (globalState === 1)? 1 : 0.5, marginBottom: (globalState === 1)? 800: 0}, \r\n        from: {opacity: (globalState === 1)? 0.5:0, marginBottom:0},\r\n     \r\n        \r\n        config: {mass: 1, frequency: 1, damping: 1},\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <animated.p style = {transcorner} className=\"line\"></animated.p>\r\n            <animated.p style = {transcorner} className=\"line2\"></animated.p> \r\n            <animated.p style = {transcorner} className=\"line3\"></animated.p>\r\n\r\n            <animated.hr style = {datetransition} className=\"dateline\"/>\r\n            <animated.div style={fadehalf} className=\"circle\"></animated.div>\r\n            <animated.div style={fadehalf} className=\"larger-circle\"></animated.div>\r\n            <animated.div style={rotation} className=\"triangle\"></animated.div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Background\r\n","import { createContext } from 'react';\r\n\r\n\r\n\r\nexport const inputContext = createContext({});","import React,{ useContext, useEffect,  useState}  from 'react';\r\nimport {useSpring, animated} from 'react-spring';\r\n\r\nimport {globalContext} from '../context/globalContext';\r\nimport {inputContext} from '../context/inputContext';\r\n\r\n\r\nimport './DropdownSection.css';\r\nfunction DropdownSection(props) {\r\n\r\n    const {globalState} = useContext(globalContext);\r\n    const {chosenOption,setChosenOption} = useContext(inputContext);\r\n    const {inputFieldValue,setInputFieldValue} = useContext(inputContext);\r\n    const dropdowntransition = useSpring({\r\n        to:{opacity:(globalState === 1)?0.7: 0,marginTop:(globalState === 1)?200: 0, backgroundColor: \"#D5D5D5\"},\r\n        from:{opacity:0,},\r\n    })\r\n    \r\n    const [open, setOpen] = useState(false);\r\n    const [InputField, setInputField] = useState(false);\r\n \r\n    function changeDropdownTarget(option) {\r\n     \r\n        setChosenOption(option);\r\n        setOpen(false);\r\n    }\r\n\r\n    function Dropdown() {\r\n\r\n        function DropdownItem(props) {\r\n            return (\r\n                <a className=\"menu-item\" onClick = {() =>  changeDropdownTarget(props.children)}>\r\n                    {props.children}\r\n                </a>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"dropdown\">\r\n                <DropdownItem >Overall</DropdownItem>\r\n                <DropdownItem >Location</DropdownItem>\r\n                <DropdownItem >User</DropdownItem>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (chosenOption === \"User\" || chosenOption ===  \"Location\") {\r\n            setInputField(true);\r\n        }\r\n        else {\r\n            setInputField(false);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n         \r\n            <animated.div style={dropdowntransition} className=\"dropdownbutton\" onClick = {() => setOpen(!open)}>\r\n                     {chosenOption} {open? <i class=\"fas fa-caret-up\"></i> : <i class=\"fas fa-caret-down\"></i>}\r\n            </animated.div>\r\n\r\n            {(InputField && !open) && \r\n            \r\n            <>\r\n            <input className = \"inputfield\" onChange = {event => setInputFieldValue(event.target.value)} /> \r\n            <p>{(chosenOption === \"Location\")? \"e.g. Windsor, ON\" : \"\"}</p>\r\n            </>\r\n            }\r\n            {open && <Dropdown />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DropdownSection\r\n","import React, {useState, useContext, useEffect, useRef} from 'react'\r\nimport { globalContext } from '../context/globalContext';\r\nimport { inputContext} from '../context/inputContext';\r\nimport { messageContext } from '../context/messageContext';\r\nimport {useSpring, animated} from 'react-spring';\r\nimport Calendar from 'react-calendar';\r\nimport DropdownSection from './DropdownSection';\r\n\r\nimport './InputSection.css';\r\n\r\nfunction InputSection() {\r\n\r\n    const {Result} = useContext(globalContext);\r\n\r\n    const {setResult} = useContext(globalContext);\r\n \r\n\r\n    const {globalState} = useContext(globalContext);\r\n    const {secondPage} = useContext(globalContext);\r\n    const {buttonMessage1} = useContext(globalContext);\r\n    const {setButtonMessage1} = useContext(globalContext);\r\n    const {setMainMessage} = useContext(messageContext);\r\n    const {setSubMessage} = useContext(messageContext);\r\n    const {setglobalState} = useContext(globalContext);\r\n\r\n    const [SelectDate1, setSelectDate1] = useState(false);\r\n    const [SelectDate2, setSelectDate2] = useState(false);\r\n    const [Submit, setSubmit] = useState(false);\r\n    const [InputFieldValue, setInputFieldValue] = useState('');\r\n    const today = new Date();\r\n    const [Date1Selected,setDate1Selected] = useState(false);\r\n    const [Date2Selected,setDate2Selected] = useState(false);\r\n\r\n    const [buttonMessage2, setButtonMessage2] = useState(\"YYYY-MM-DD\");\r\n    const [chosenOption, setChosenOption] = useState(\"Overall\");\r\n\r\n    const [date] = useState (new Date());\r\n    const [date1, setDate1] = useState (new Date());\r\n\r\n    const [date2, setDate2] = useState (new Date());\r\n    const isInitialMount = useRef(true);\r\n\r\n    var button1;\r\n    var button2;\r\n    \r\n    const fadebutton = useSpring({ \r\n        to: {marginRight:(globalState === 1)?400:0, backgroundColor:(globalState === 1)? \"#D5D5D5\" : \"#88AAE5\" ,opacity:0.5}, \r\n        from: {opacity: 0},\r\n        delay:(globalState === 1)?0:300,\r\n       \r\n        config: {duration: 1000},\r\n      });\r\n\r\n    const secondbutton = useSpring({\r\n        to:{opacity:(globalState === 1)?0.5: 0,marginLeft:(globalState === 1)?400: 0, backgroundColor: \"#D5D5D5\"},  \r\n        from:{opacity:0,},\r\n    });\r\n    const enterDate1 = () => {\r\n        setSelectDate1(true);\r\n        button2 = document.getElementById(\"button2\");\r\n        button2.style.display=\"none\";\r\n    }  \r\n\r\n    const enterDate2 = () => {\r\n        setSelectDate2(true);\r\n        button1 = document.getElementById(\"button1\");\r\n        button1.style.display=\"none\";\r\n    }  \r\n \r\n    const onChange1 = date => { \r\n\r\n        if (date.setHours(0,0,0,0) <= today.setHours(0,0,0,0) && date.setHours(0,0,0,0) <= date2.setHours(0,0,0,0)) {\r\n            setDate1(date);\r\n\r\n            setSelectDate1(false);\r\n            setButtonMessage1(date.toISOString().substring(0, 10));\r\n            var button2 = document.getElementById(\"button2\");\r\n            button2.style.display=\"block\";\r\n            setDate1Selected(true);\r\n        }\r\n        else {\r\n            alert (\"Choose a valid date!\");\r\n        }\r\n    } \r\n\r\n    const onChange2 = date => { \r\n        if (date.setHours(0,0,0,0) <= today.setHours(0,0,0,0)) {\r\n            if (Date1Selected && date1.setHours(0,0,0,0) <= date.setHours(0,0,0,0)) {\r\n                setDate2(date);\r\n\r\n                setSelectDate2(false);\r\n                setButtonMessage2(date.toISOString().substring(0, 10));\r\n                button1 = document.getElementById(\"button1\");\r\n                button1.style.display=\"block\";\r\n                setDate2Selected(true);\r\n            }  \r\n            else if (!Date1Selected) {\r\n                setDate2(date);\r\n\r\n                setSelectDate2(false);\r\n                setButtonMessage2(date.toISOString().substring(0, 10));\r\n                button1 = document.getElementById(\"button1\");\r\n                button1.style.display=\"block\";\r\n                setDate2Selected(true);\r\n            }\r\n            else {\r\n                alert (\"Choose a valid date!\");\r\n            }\r\n        }\r\n        else {\r\n            alert (\"Choose a valid date!\");\r\n        }\r\n    } \r\n    const styles = useSpring({\r\n        loop: true,\r\n        from: { rotateZ: 0 },\r\n        to: { rotateZ: 180 },\r\n      })\r\n  \r\n    \r\n    useEffect(() => {\r\n            if (isInitialMount.current) { \r\n                isInitialMount.current = false;\r\n            }\r\n            else {\r\n                if (chosenOption === \"Overall\") {\r\n                    fetch('/api/tweets/date_range?start_date=' + buttonMessage1 + '&end_date=' + buttonMessage2).then(response => response.json()).then( data => {\r\n                        console.log(data);\r\n                        if (Submit) { \r\n                            setResult(data);\r\n                            console.log(Result);\r\n                            setSubMessage('');\r\n                            setMainMessage(\"Topic Tracking Results: \");\r\n                            setglobalState(2);\r\n                        }\r\n                        \r\n                    }).catch((error) => {\r\n                        alert(\"Could not retrieve the requested data!\");\r\n                        window.location.reload(true);\r\n                    });\r\n                }\r\n                else if (chosenOption === \"Location\") {\r\n                    fetch('/api/tweets/location?city='+ InputFieldValue + '&start_date=' + buttonMessage1 + '&end_date=' + buttonMessage2).then(response => response.json()).then( data => {\r\n                        console.log(data);\r\n                        if (Submit) { \r\n                            setResult(data);\r\n                            console.log(Result);\r\n                            setSubMessage('');\r\n                            setMainMessage(\"Topic Tracking Results (\" + InputFieldValue + \"): \");\r\n                            setglobalState(2);\r\n                        }\r\n                        \r\n                    }).catch((error) => {\r\n                        alert(\"Could not retrieve the requested data!\");\r\n                        window.location.reload(true);\r\n                    });\r\n                }\r\n                else {\r\n                    fetch('/api/tweets/user?user_name='+ InputFieldValue + '&start_date=' + buttonMessage1 + '&end_date=' + buttonMessage2).then(response => response.json()).then( data => {\r\n                        console.log(data);\r\n                        if (Submit) { \r\n                            setResult(data);\r\n                            console.log(Result);\r\n                            setSubMessage('');\r\n                            setMainMessage(\"Topic Tracking Results (\" + InputFieldValue + \"): \");\r\n                            setglobalState(2);\r\n                        }\r\n                        \r\n                    }).catch((error) => {\r\n                        alert(\"Could not retrieve the requested data!\");\r\n                        window.location.reload(true);\r\n                    });\r\n                }\r\n               \r\n            }\r\n    },[Submit]);\r\n\r\n    return (\r\n        <>\r\n            {SelectDate1? <Calendar onChange={onChange1} value = {date} className=\"front-calendar\"/> : <animated.button style = {fadebutton} className=\"button\" id=\"button1\" onClick={(globalState === 1)? enterDate1: secondPage}>{buttonMessage1}</animated.button>}\r\n            \r\n            {SelectDate2? <Calendar onChange={onChange2} value = {date} className=\"front-calendar\" /> : <animated.button style = {secondbutton} className=\"button\" id=\"button2\" onClick={(globalState === 1)?enterDate2: ''}>{buttonMessage2}</animated.button>}\r\n            <inputContext.Provider value = {{chosenOption,setChosenOption, setInputFieldValue}}>\r\n                { (globalState === 1) && <DropdownSection />} \r\n     \r\n            </inputContext.Provider>\r\n           {Submit &&\r\n            <>\r\n                <div className=\"modal\"> \r\n                    <animated.div\r\n                    style={{\r\n                        \r\n                        \r\n                        width: 80,\r\n                        height: 80,\r\n                        backgroundColor: '#deebf3',\r\n                        borderRadius: 16,\r\n                        margin: 20,\r\n                        ...styles,\r\n                    }}\r\n                    />\r\n                    <h2> Retrieving Data...</h2>\r\n                </div>\r\n                \r\n               \r\n            </>\r\n           }\r\n            <animated.button style = {useSpring({to:{opacity:(globalState === 1)?0.5: 0,marginTop:(globalState === 1)?700: 0, backgroundColor: \"#555555\", color:\"#fff\"}, from:{opacity:0,},})} className=\"button\" id=\"submitbutton\" \r\n                    onClick = { async () => {\r\n                    if (Date1Selected && Date2Selected) {\r\n                        const inputdata = {buttonMessage1, buttonMessage2, chosenOption, InputFieldValue};\r\n                        const response = await fetch('./add_sqlstatement', {\r\n                            method: 'POST',\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            },\r\n                            body: JSON.stringify(inputdata)\r\n                        })\r\n                        \r\n                        if (response.ok) {\r\n                            setSubmit(true);            \r\n                        }\r\n\r\n                    }\r\n                    else {\r\n                        alert (\"You must enter a date range first!\");\r\n                    }\r\n                    \r\n            }}>Submit</animated.button>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputSection\r\n","import React, {useContext, useState} from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './ResultPage.css';\r\nimport { globalContext } from '../context/globalContext';\r\nfunction ResultPage() {\r\n    //const rand = () => Math.round(Math.random() * 20 - 10); \r\n\r\n    const {Result} = useContext(globalContext);\r\n \r\n    const [GraphNumber, setGraphNumber] = useState(0);\r\n    const testlabels = Object.keys(Result[GraphNumber]);\r\n    const testvalues = Object.values(Result[GraphNumber]);\r\n\r\n    const data = {\r\n      labels: testlabels,\r\n      datasets: [\r\n        {\r\n          label: 'Overall Term Frequency',\r\n          data: testvalues,\r\n          backgroundColor: [\r\n            'rgba(54, 162, 235, 0.2)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(54, 162, 235, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const options = {\r\n      indexAxis: 'y',\r\n      // Elements options apply to all of the options unless overridden in a dataset\r\n      // In this case, we are setting the border of each horizontal bar to be 2px wide\r\n      elements: {\r\n        bar: {\r\n          borderWidth: 2,\r\n        },\r\n      },\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'right',\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Top 10 Relevant Terms for Topic ' + (GraphNumber + 1),\r\n        },\r\n      },\r\n    };\r\n\r\n    const changeGraph = (num) => {\r\n      setGraphNumber(num);\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='result-wrapper'>\r\n\r\n          <div className=\"topic-selection\">\r\n            <button onClick= {() => changeGraph(0)}> Topic 1</button>\r\n            <button onClick= {() => changeGraph(1)}> Topic 2</button>\r\n            <button onClick= {() => changeGraph(2)}> Topic 3</button>\r\n            <button onClick= {() => changeGraph(3)}> Topic 4</button>\r\n            <button onClick= {() => changeGraph(4)}> Topic 5</button>\r\n            <button onClick= {() => changeGraph(5)}> Topic 6</button>\r\n            <button onClick= {() => changeGraph(6)}> Topic 7</button>\r\n            <button onClick= {() => changeGraph(7)}> Topic 8</button>\r\n            <button onClick= {() => changeGraph(8)}> Topic 9</button>\r\n            <button onClick= {() => changeGraph(9)}> Topic 10 </button>\r\n          </div>\r\n            <div className='result-graph'>\r\n              <Bar data={data} options={options}/>\r\n            </div>\r\n          </div>\r\n          \r\n        \r\n      </>\r\n    );\r\n\r\n \r\n\r\n}\r\n\r\nexport default ResultPage\r\n","/* Core/Library Imports */\r\nimport React, { useState} from 'react';\r\nimport { useSpring } from 'react-spring';\r\nimport './App.css';\r\n\r\n/* Component Imports */\r\nimport MainMessage from  './components/MainMessage';\r\nimport Background from './components/Background';\r\nimport InputSection from './components/InputSection';\r\nimport ResultPage from './components/ResultPage';\r\n/* Context Imports */\r\nimport {globalContext} from './context/globalContext';\r\nimport {messageContext} from './context/messageContext';\r\nimport {transitionContext} from './context/transitionContext';\r\n\r\nfunction App() {\r\n\r\n  /* Variable section that contains all the states that need to be tracked */\r\n  const [globalState, setglobalState] = useState(0);\r\n\r\n  const [Result, setResult] = useState('');\r\n\r\n  /* This is a very roundabout way of deleting a button, not efficient at all */\r\n  const [buttonMessage1,setButtonMessage1] = useState(\"Let's begin\");\r\n\r\n  const [bgColor,setbgColor] = useState(\"\");\r\n\r\n  const [Color, setColor] = useState(\"\");\r\n\r\n  const [TitleMessage, setMainMessage] = useState(\"Welcome to Topic Tracking\");\r\n\r\n  const [SubMessage, setSubMessage] = useState(\"A Twitter-based application\");\r\n\r\n  /* Global Spring Section*/\r\n  const fade = useSpring({ \r\n    to: {opacity: (globalState === 1)? 0 : 1}, \r\n    from: {opacity: (globalState === 1)? 1 : 0},\r\n    delay:globalState?0:300,\r\n    \r\n    config: {duration: 1000},\r\n  });\r\n\r\n  \r\n\r\n  /* This section will contain all the functional data that is being pulled from the python file */\r\n\r\n\r\n  /* This section is for all the custom functions that need to be defined */\r\n  const secondPage = () => {\r\n    setbgColor(\"#6B7378\");\r\n    setColor(\"#fff\");\r\n    setMainMessage(\"Enter your date range\");\r\n    setSubMessage(\"Sort Method:\");\r\n    setglobalState(1);\r\n    setButtonMessage1(\"YYYY-MM-DD\")\r\n\r\n  } \r\n\r\n  \r\n  /* The render section */\r\n  return (\r\n    <div className= \"App\" style={{backgroundColor: bgColor, color: Color}}>\r\n      <globalContext.Provider value = {{globalState, setglobalState, secondPage, buttonMessage1, setButtonMessage1, Result, setResult}}>\r\n        <messageContext.Provider value = {{TitleMessage, SubMessage,setSubMessage, setMainMessage}}>\r\n        {/*Pure background elements*/}\r\n\r\n        <Background />\r\n\r\n        <transitionContext.Provider value = {{fade}}>\r\n            {/*text related elements */}\r\n            \r\n                <MainMessage />\r\n      \r\n            {/*functional component*/}\r\n\r\n            {(globalState !== 2) && <InputSection />}\r\n            {(globalState === 2 ) && <ResultPage />}\r\n        </transitionContext.Provider>\r\n        </messageContext.Provider>\r\n      </globalContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}